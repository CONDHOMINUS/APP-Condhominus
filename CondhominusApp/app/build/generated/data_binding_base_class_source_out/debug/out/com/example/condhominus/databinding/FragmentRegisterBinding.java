// Generated by view binder compiler. Do not edit!
package com.example.condhominus.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.condhominus.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentRegisterBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputEditText bornView;

  @NonNull
  public final Button buttonSave;

  @NonNull
  public final TextInputLayout condominiumInputPassword;

  @NonNull
  public final TextInputEditText condominiumName;

  @NonNull
  public final TextView condominiumTitle;

  @NonNull
  public final TextInputEditText documentView;

  @NonNull
  public final TextInputLayout inputBorn;

  @NonNull
  public final TextInputLayout inputDocument;

  @NonNull
  public final TextInputLayout inputDocumentUser;

  @NonNull
  public final ProgressBar loadingProgress;

  @NonNull
  public final TextInputEditText nameView;

  @NonNull
  public final TextInputLayout obsInput;

  @NonNull
  public final TextInputEditText obsView;

  @NonNull
  public final TextView registerTitle;

  @NonNull
  public final ConstraintLayout registerViewGroup;

  @NonNull
  public final TextView warningAllFields;

  private FragmentRegisterBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextInputEditText bornView, @NonNull Button buttonSave,
      @NonNull TextInputLayout condominiumInputPassword, @NonNull TextInputEditText condominiumName,
      @NonNull TextView condominiumTitle, @NonNull TextInputEditText documentView,
      @NonNull TextInputLayout inputBorn, @NonNull TextInputLayout inputDocument,
      @NonNull TextInputLayout inputDocumentUser, @NonNull ProgressBar loadingProgress,
      @NonNull TextInputEditText nameView, @NonNull TextInputLayout obsInput,
      @NonNull TextInputEditText obsView, @NonNull TextView registerTitle,
      @NonNull ConstraintLayout registerViewGroup, @NonNull TextView warningAllFields) {
    this.rootView = rootView;
    this.bornView = bornView;
    this.buttonSave = buttonSave;
    this.condominiumInputPassword = condominiumInputPassword;
    this.condominiumName = condominiumName;
    this.condominiumTitle = condominiumTitle;
    this.documentView = documentView;
    this.inputBorn = inputBorn;
    this.inputDocument = inputDocument;
    this.inputDocumentUser = inputDocumentUser;
    this.loadingProgress = loadingProgress;
    this.nameView = nameView;
    this.obsInput = obsInput;
    this.obsView = obsView;
    this.registerTitle = registerTitle;
    this.registerViewGroup = registerViewGroup;
    this.warningAllFields = warningAllFields;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentRegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bornView;
      TextInputEditText bornView = ViewBindings.findChildViewById(rootView, id);
      if (bornView == null) {
        break missingId;
      }

      id = R.id.buttonSave;
      Button buttonSave = ViewBindings.findChildViewById(rootView, id);
      if (buttonSave == null) {
        break missingId;
      }

      id = R.id.condominiumInputPassword;
      TextInputLayout condominiumInputPassword = ViewBindings.findChildViewById(rootView, id);
      if (condominiumInputPassword == null) {
        break missingId;
      }

      id = R.id.condominiumName;
      TextInputEditText condominiumName = ViewBindings.findChildViewById(rootView, id);
      if (condominiumName == null) {
        break missingId;
      }

      id = R.id.condominiumTitle;
      TextView condominiumTitle = ViewBindings.findChildViewById(rootView, id);
      if (condominiumTitle == null) {
        break missingId;
      }

      id = R.id.documentView;
      TextInputEditText documentView = ViewBindings.findChildViewById(rootView, id);
      if (documentView == null) {
        break missingId;
      }

      id = R.id.inputBorn;
      TextInputLayout inputBorn = ViewBindings.findChildViewById(rootView, id);
      if (inputBorn == null) {
        break missingId;
      }

      id = R.id.inputDocument;
      TextInputLayout inputDocument = ViewBindings.findChildViewById(rootView, id);
      if (inputDocument == null) {
        break missingId;
      }

      id = R.id.inputDocumentUser;
      TextInputLayout inputDocumentUser = ViewBindings.findChildViewById(rootView, id);
      if (inputDocumentUser == null) {
        break missingId;
      }

      id = R.id.loadingProgress;
      ProgressBar loadingProgress = ViewBindings.findChildViewById(rootView, id);
      if (loadingProgress == null) {
        break missingId;
      }

      id = R.id.nameView;
      TextInputEditText nameView = ViewBindings.findChildViewById(rootView, id);
      if (nameView == null) {
        break missingId;
      }

      id = R.id.obsInput;
      TextInputLayout obsInput = ViewBindings.findChildViewById(rootView, id);
      if (obsInput == null) {
        break missingId;
      }

      id = R.id.obsView;
      TextInputEditText obsView = ViewBindings.findChildViewById(rootView, id);
      if (obsView == null) {
        break missingId;
      }

      id = R.id.registerTitle;
      TextView registerTitle = ViewBindings.findChildViewById(rootView, id);
      if (registerTitle == null) {
        break missingId;
      }

      id = R.id.registerViewGroup;
      ConstraintLayout registerViewGroup = ViewBindings.findChildViewById(rootView, id);
      if (registerViewGroup == null) {
        break missingId;
      }

      id = R.id.warningAllFields;
      TextView warningAllFields = ViewBindings.findChildViewById(rootView, id);
      if (warningAllFields == null) {
        break missingId;
      }

      return new FragmentRegisterBinding((ConstraintLayout) rootView, bornView, buttonSave,
          condominiumInputPassword, condominiumName, condominiumTitle, documentView, inputBorn,
          inputDocument, inputDocumentUser, loadingProgress, nameView, obsInput, obsView,
          registerTitle, registerViewGroup, warningAllFields);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
