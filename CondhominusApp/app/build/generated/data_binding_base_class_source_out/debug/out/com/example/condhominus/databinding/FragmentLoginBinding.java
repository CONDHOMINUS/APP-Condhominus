// Generated by view binder compiler. Do not edit!
package com.example.condhominus.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.condhominus.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonLogin;

  @NonNull
  public final Button buttonSave;

  @NonNull
  public final CardView cardImage;

  @NonNull
  public final CardView cardView2;

  @NonNull
  public final ImageView imageLoginUser;

  @NonNull
  public final ImageView imageUser;

  @NonNull
  public final TextInputLayout inputDocument;

  @NonNull
  public final TextInputLayout inputPassword;

  @NonNull
  public final TextInputEditText loginDocument;

  @NonNull
  public final TextInputEditText loginPassword;

  @NonNull
  public final TextView loginTitle;

  @NonNull
  public final ConstraintLayout loginViewGroup;

  @NonNull
  public final TextInputEditText profileAge;

  @NonNull
  public final TextInputEditText profileHeight;

  @NonNull
  public final TextInputEditText profileName;

  @NonNull
  public final ConstraintLayout profileViewGroup;

  @NonNull
  public final TextInputEditText profileWeight;

  @NonNull
  public final TextInputLayout textInputLayoutAge;

  @NonNull
  public final TextInputLayout textInputLayoutHeight;

  @NonNull
  public final TextInputLayout textInputLayoutName;

  @NonNull
  public final TextInputLayout textInputLayoutWeight;

  @NonNull
  public final TextView textTitle;

  @NonNull
  public final TextView warningDocument;

  private FragmentLoginBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonLogin,
      @NonNull Button buttonSave, @NonNull CardView cardImage, @NonNull CardView cardView2,
      @NonNull ImageView imageLoginUser, @NonNull ImageView imageUser,
      @NonNull TextInputLayout inputDocument, @NonNull TextInputLayout inputPassword,
      @NonNull TextInputEditText loginDocument, @NonNull TextInputEditText loginPassword,
      @NonNull TextView loginTitle, @NonNull ConstraintLayout loginViewGroup,
      @NonNull TextInputEditText profileAge, @NonNull TextInputEditText profileHeight,
      @NonNull TextInputEditText profileName, @NonNull ConstraintLayout profileViewGroup,
      @NonNull TextInputEditText profileWeight, @NonNull TextInputLayout textInputLayoutAge,
      @NonNull TextInputLayout textInputLayoutHeight, @NonNull TextInputLayout textInputLayoutName,
      @NonNull TextInputLayout textInputLayoutWeight, @NonNull TextView textTitle,
      @NonNull TextView warningDocument) {
    this.rootView = rootView;
    this.buttonLogin = buttonLogin;
    this.buttonSave = buttonSave;
    this.cardImage = cardImage;
    this.cardView2 = cardView2;
    this.imageLoginUser = imageLoginUser;
    this.imageUser = imageUser;
    this.inputDocument = inputDocument;
    this.inputPassword = inputPassword;
    this.loginDocument = loginDocument;
    this.loginPassword = loginPassword;
    this.loginTitle = loginTitle;
    this.loginViewGroup = loginViewGroup;
    this.profileAge = profileAge;
    this.profileHeight = profileHeight;
    this.profileName = profileName;
    this.profileViewGroup = profileViewGroup;
    this.profileWeight = profileWeight;
    this.textInputLayoutAge = textInputLayoutAge;
    this.textInputLayoutHeight = textInputLayoutHeight;
    this.textInputLayoutName = textInputLayoutName;
    this.textInputLayoutWeight = textInputLayoutWeight;
    this.textTitle = textTitle;
    this.warningDocument = warningDocument;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonLogin;
      Button buttonLogin = ViewBindings.findChildViewById(rootView, id);
      if (buttonLogin == null) {
        break missingId;
      }

      id = R.id.buttonSave;
      Button buttonSave = ViewBindings.findChildViewById(rootView, id);
      if (buttonSave == null) {
        break missingId;
      }

      id = R.id.cardImage;
      CardView cardImage = ViewBindings.findChildViewById(rootView, id);
      if (cardImage == null) {
        break missingId;
      }

      id = R.id.cardView2;
      CardView cardView2 = ViewBindings.findChildViewById(rootView, id);
      if (cardView2 == null) {
        break missingId;
      }

      id = R.id.imageLoginUser;
      ImageView imageLoginUser = ViewBindings.findChildViewById(rootView, id);
      if (imageLoginUser == null) {
        break missingId;
      }

      id = R.id.imageUser;
      ImageView imageUser = ViewBindings.findChildViewById(rootView, id);
      if (imageUser == null) {
        break missingId;
      }

      id = R.id.inputDocument;
      TextInputLayout inputDocument = ViewBindings.findChildViewById(rootView, id);
      if (inputDocument == null) {
        break missingId;
      }

      id = R.id.inputPassword;
      TextInputLayout inputPassword = ViewBindings.findChildViewById(rootView, id);
      if (inputPassword == null) {
        break missingId;
      }

      id = R.id.loginDocument;
      TextInputEditText loginDocument = ViewBindings.findChildViewById(rootView, id);
      if (loginDocument == null) {
        break missingId;
      }

      id = R.id.loginPassword;
      TextInputEditText loginPassword = ViewBindings.findChildViewById(rootView, id);
      if (loginPassword == null) {
        break missingId;
      }

      id = R.id.loginTitle;
      TextView loginTitle = ViewBindings.findChildViewById(rootView, id);
      if (loginTitle == null) {
        break missingId;
      }

      id = R.id.loginViewGroup;
      ConstraintLayout loginViewGroup = ViewBindings.findChildViewById(rootView, id);
      if (loginViewGroup == null) {
        break missingId;
      }

      id = R.id.profileAge;
      TextInputEditText profileAge = ViewBindings.findChildViewById(rootView, id);
      if (profileAge == null) {
        break missingId;
      }

      id = R.id.profileHeight;
      TextInputEditText profileHeight = ViewBindings.findChildViewById(rootView, id);
      if (profileHeight == null) {
        break missingId;
      }

      id = R.id.profileName;
      TextInputEditText profileName = ViewBindings.findChildViewById(rootView, id);
      if (profileName == null) {
        break missingId;
      }

      id = R.id.profileViewGroup;
      ConstraintLayout profileViewGroup = ViewBindings.findChildViewById(rootView, id);
      if (profileViewGroup == null) {
        break missingId;
      }

      id = R.id.profileWeight;
      TextInputEditText profileWeight = ViewBindings.findChildViewById(rootView, id);
      if (profileWeight == null) {
        break missingId;
      }

      id = R.id.textInputLayoutAge;
      TextInputLayout textInputLayoutAge = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutAge == null) {
        break missingId;
      }

      id = R.id.textInputLayoutHeight;
      TextInputLayout textInputLayoutHeight = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutHeight == null) {
        break missingId;
      }

      id = R.id.textInputLayoutName;
      TextInputLayout textInputLayoutName = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutName == null) {
        break missingId;
      }

      id = R.id.textInputLayoutWeight;
      TextInputLayout textInputLayoutWeight = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutWeight == null) {
        break missingId;
      }

      id = R.id.textTitle;
      TextView textTitle = ViewBindings.findChildViewById(rootView, id);
      if (textTitle == null) {
        break missingId;
      }

      id = R.id.warningDocument;
      TextView warningDocument = ViewBindings.findChildViewById(rootView, id);
      if (warningDocument == null) {
        break missingId;
      }

      return new FragmentLoginBinding((ConstraintLayout) rootView, buttonLogin, buttonSave,
          cardImage, cardView2, imageLoginUser, imageUser, inputDocument, inputPassword,
          loginDocument, loginPassword, loginTitle, loginViewGroup, profileAge, profileHeight,
          profileName, profileViewGroup, profileWeight, textInputLayoutAge, textInputLayoutHeight,
          textInputLayoutName, textInputLayoutWeight, textTitle, warningDocument);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
