// Generated by view binder compiler. Do not edit!
package com.example.condhominus.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CalendarView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.condhominus.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSchedulingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnCreateSchedule;

  @NonNull
  public final Button btnViewSchedule;

  @NonNull
  public final CalendarView calendarView;

  @NonNull
  public final LinearLayout linearLayout3;

  @NonNull
  public final TextView textDate;

  private FragmentSchedulingBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnCreateSchedule, @NonNull Button btnViewSchedule,
      @NonNull CalendarView calendarView, @NonNull LinearLayout linearLayout3,
      @NonNull TextView textDate) {
    this.rootView = rootView;
    this.btnCreateSchedule = btnCreateSchedule;
    this.btnViewSchedule = btnViewSchedule;
    this.calendarView = calendarView;
    this.linearLayout3 = linearLayout3;
    this.textDate = textDate;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSchedulingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSchedulingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_scheduling, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSchedulingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_create_schedule;
      Button btnCreateSchedule = ViewBindings.findChildViewById(rootView, id);
      if (btnCreateSchedule == null) {
        break missingId;
      }

      id = R.id.btn_view_schedule;
      Button btnViewSchedule = ViewBindings.findChildViewById(rootView, id);
      if (btnViewSchedule == null) {
        break missingId;
      }

      id = R.id.calendar_view;
      CalendarView calendarView = ViewBindings.findChildViewById(rootView, id);
      if (calendarView == null) {
        break missingId;
      }

      id = R.id.linearLayout3;
      LinearLayout linearLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout3 == null) {
        break missingId;
      }

      id = R.id.textDate;
      TextView textDate = ViewBindings.findChildViewById(rootView, id);
      if (textDate == null) {
        break missingId;
      }

      return new FragmentSchedulingBinding((ConstraintLayout) rootView, btnCreateSchedule,
          btnViewSchedule, calendarView, linearLayout3, textDate);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
